<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\web\UploadedFile;

/**
 * This is the model class for table "candidates".
 *
 * @property int $id
 * @property int $created_at
 * @property string $name
 * @property int $birth_date
 * @property int $years_experience
 * @property string $frameworks
 * @property string $resume
 * @property string $comment
 */
class Candidates extends ActiveRecord
{
    const FRAMEWORKS = ['Yii 1', 'Yii 2', 'Laravel', 'Symphony', 'Zend'];
    const RESUME_DIR = 'resume_files';

    public $birth_date_string = '';
    public $frameworks_array = [];

    /**
     * @var UploadedFile
     */
    public $resume_file;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'candidates';
    }

    public function behaviors()
    {
        return [
            'timestamp' => [
                'class' => TimestampBehavior::class,
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
             ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['created_at', 'birth_date', 'years_experience'], 'integer'],
            [['name', 'frameworks', 'resume'], 'string', 'max' => 255],
            [['comment'], 'string', 'max' => 1000],
            [['birth_date_string'], 'string'],
            [['frameworks_array'], 'safe'],
            [['resume_file'], 'file', 'skipOnEmpty' => !$this->isNewRecord, 'extensions' => 'pdf', 'maxSize' => 1024 * 1024 * 1],

        ];
    }

    public function beforeSave($insert)
    {
        $this->birth_date = 0;
        if ($this->birth_date_string) {
            $this->birth_date = strtotime($this->birth_date_string);
        }
        $this->frameworks = '';
        if ($this->frameworks_array) {
            $this->frameworks = implode(',', $this->frameworks_array);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'created_at' => 'Created At',
            'name' => 'Name',
            'birth_date' => 'Birth Date',
            'birth_date_string' => 'Birth Date',
            'years_experience' => 'Years Experience',
            'frameworks' => 'Frameworks',
            'frameworks_array' => 'Frameworks array',
            'resume' => 'Resume',
            'resume_file' => 'Resume',
            'comment' => 'Comment',
        ];
    }

    public function upload()
    {
        if (!$this->resume_file) {
            return true;
        }

        $fileName = $this->resume_file->baseName . '.' . $this->resume_file->extension;
        $this->resume = $fileName;
        return $this->resume_file->saveAs(Yii::getAlias('@webroot') . '/' . self::RESUME_DIR . '/' . $fileName);
    }
}
